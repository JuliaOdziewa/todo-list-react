{"version":3,"sources":["GlobalStyle.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","useTasks.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","StyledForm","styled","form","Input","input","theme","color","grey","Button","button","teal","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","placeholder","onChange","target","ref","onClick","current","focus","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","forestGreen","remove","crimson","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","Wrapper","div","silver","Buttons","toggleHideDone","setAllDone","length","disabled","every","section","Header","header","breakpoint","mobile","Title","h2","Body","Section","title","body","extraHeaderContent","Container","children","getTasks","tasksFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","darkCyan","persianGreen","white","limeGreen","pastelGreen","amaranth","darkPink","document","getElementById"],"mappings":"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","file":"static/js/main.cccdf951.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Montserrat', sans-serif;\r\n        background-color: rgb(224, 224, 224);\r\n    }\r\n\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n    @media(max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid ${({ theme }) => theme.color.grey};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.color.teal};\r\n    color: white;\r\n    border: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import React, { useRef, useState } from \"react\";\r\nimport { Button, Input, StyledForm } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if (!trimmedNewTaskContent) {\r\n            return;\r\n        }\r\n\r\n        addNewTask(trimmedNewTaskContent);\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    const inputFocus = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                value={newTaskContent}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                ref={inputRef}\r\n            />\r\n            <Button\r\n                onClick={inputFocus}\r\n            >\r\n                Dodaj zadanie\r\n            </ Button>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.grey};\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    color: white;\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n    transition: background-color 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background-color: ${({ theme }) => theme.color.forestGreen};\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n\r\n        &:active {\r\n            filter: brightness(120%);\r\n        }\r\n    `}\r\n    ${({ remove }) => remove && css`\r\n        background-color: ${({ theme }) => theme.color.crimson};\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n    `}\r\n`;\r\n","import { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done}>\r\n                    {task.content}\r\n                </Content >\r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ğŸ—‘\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.color.teal};\r\n    border: none;\r\n    margin: 0 0 0 20px;\r\n    transition: color 0.3s;\r\n\r\n    @media(max-width: 767px){\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n    &:hover {\r\n        filter: brightness(100%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n\r\n    &:disabled {\r\n        color: ${({ theme }) => theme.color.silver};\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <Wrapper>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone} >\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </Wrapper >\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 10px 0;\r\n    background-color: white;\r\n    box-shadow: 0 0 5px ${({ theme }) => theme.color.grey};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.grey};\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 20px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 25px;\r\n`;\r\n","import { Header, Wrapper, Body, Title } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <Wrapper>\r\n        <Header>\r\n            <Title>{title}</Title>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        <Body>\r\n            {body}\r\n        </Body>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Section;","\r\n\r\nconst Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 1000px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n`;","import { Wrapper } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Container;","import { useEffect, useState } from 'react';\r\n\r\nconst getTasks = () => {\r\n    const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\r\n    return tasksFromLocalStorage\r\n        ? JSON.parse(tasksFromLocalStorage)\r\n        : []\r\n}\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(getTasks);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n\r\n            return task;\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n    }, [tasks]);\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks, {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            },\r\n        ])\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        setAllDone,\r\n        addNewTask\r\n    };\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport { useTasks } from \"./useTasks\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false); //zostaje tu\r\n\r\n  const { tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask\r\n  } = useTasks();\r\n\r\n  const toggleHideDone = () => { // zostaje tu\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title={\"Lista zadaÅ„\"} />\r\n      <Section title=\"Dodaj nowe zdanie\"\r\n        body={<Form addNewTask={addNewTask} />}\r\n      />\r\n      <Section\r\n        title={\"Lista zadaÅ„\"}\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        teal: \"#008080\",\r\n        silver: \"#CCCCCC\",\r\n        darkCyan: \"#009191\",\r\n        persianGreen: \"#00A5A5\",\r\n        white: \"#FFFFFF\",\r\n        forestGreen: \"#228C22\",\r\n        limeGreen: \"#2EAD2E\",\r\n        pastelGreen: \"#56D856\",\r\n        crimson: \"#DB143C\",\r\n        amaranth: \"#EA2341\",\r\n        darkPink: \"#E8406D\",\r\n        grey: \"#DDDDDD\",\r\n    },\r\n    breakpoint: {\r\n        mobile: 767,\r\n    },\r\n};"],"sourceRoot":""}